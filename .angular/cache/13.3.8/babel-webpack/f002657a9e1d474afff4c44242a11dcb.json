{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { GuestValidatorService } from '../../../service/guest/guest-validator.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../../service/guest/guest.service\";\nconst _c0 = [\"btnSuccess\"];\nconst _c1 = [\"btnFailed\"];\nconst _c2 = [\"btnCloseSuccess\"];\nconst _c3 = [\"btnSubmit\"];\nconst _c4 = [\"btnClose\"];\nconst _c5 = [\"btnCloseConfirm\"];\nconst _c6 = [\"btnConfirm\"];\nconst _c7 = [\"inputPassword\"];\n/*\r\n  Created by khoaVC\r\n  Role: Guest\r\n  Time: 10:00 21/06/2022\r\n  Component: GuestCreateComponent\r\n  Function: all function\r\n*/\n\nexport let GuestCreateComponent = /*#__PURE__*/(() => {\n  class GuestCreateComponent {\n    constructor(fb, router, personService) {\n      this.fb = fb;\n      this.router = router;\n      this.personService = personService;\n      this.guests = [];\n      this.image = 'https://uniquartz.co.nz/wp-content/uploads/2018/06/image_large.png';\n    }\n\n    ngOnInit() {\n      this.getToday();\n      this.createForm = this.fb.group({\n        userName: ['', [Validators.required, Validators.pattern('^[^!@#$%^&*()_+\\\\-=\\\\[\\\\]{};\\':\\\"\\\\\\\\|,.<>\\\\/?~`]*$'), Validators.minLength(6), Validators.maxLength(32)]],\n        pw: this.fb.group({\n          password: ['', [Validators.required, Validators.pattern('^[^!@#$%^&*()_+\\\\-=\\\\[\\\\]{};\\':\\\"\\\\\\\\|,.<>\\\\/?~`]*$'), Validators.minLength(6), Validators.maxLength(32)]],\n          rePassword: ['', [Validators.required, Validators.pattern('^[^!@#$%^&*()_+\\\\-=\\\\[\\\\]{};\\':\\\"\\\\\\\\|,.<>\\\\/?~`]*$'), Validators.minLength(6), Validators.maxLength(32)]]\n        }, {\n          validator: GuestValidatorService.comparePassword\n        }),\n        dateOfBirth: ['', [Validators.required, GuestValidatorService.validateDateOfBirth]],\n        createDate: [this.today, [Validators.required, GuestValidatorService.validateCreateDate]],\n        gender: ['', Validators.required],\n        career: ['', Validators.required],\n        name: ['', [Validators.required, Validators.pattern('^[^!@#$%^&*()_+\\\\-=\\\\[\\\\]{};\\':\\\"\\\\\\\\|,.<>\\\\/?~`]*$'), Validators.minLength(6), Validators.maxLength(32)]],\n        address: ['', Validators.required],\n        em: this.fb.group({\n          email: ['', [Validators.required, Validators.email]],\n          reEmail: ['', [Validators.required, Validators.email]]\n        }, {\n          validator: GuestValidatorService.compareEmail\n        }),\n        isAgree: ['', Validators.required]\n      }); // this.getEmployee();\n\n      this.image = 'https://uniquartz.co.nz/wp-content/uploads/2018/06/image_large.png';\n      this.flagShow = true;\n      this.createFlag = false;\n      this.showPassword = false;\n      this.showRePassword = false;\n    }\n\n    get name() {\n      return this.createForm.get('name');\n    }\n\n    get createDate() {\n      return this.createForm.get('createDate');\n    }\n\n    get userName() {\n      return this.createForm.get('userName');\n    }\n\n    get dateOfBirth() {\n      return this.createForm.get('dateOfBirth');\n    }\n\n    get gender() {\n      return this.createForm.get('gender');\n    }\n\n    get career() {\n      return this.createForm.get('career');\n    }\n\n    get address() {\n      return this.createForm.get('address');\n    }\n\n    get pw() {\n      return this.createForm.get('pw');\n    }\n\n    get password() {\n      return this.createForm.get('pw.password');\n    }\n\n    get rePassword() {\n      return this.createForm.get('pw.rePassword');\n    }\n\n    get em() {\n      return this.createForm.get('em');\n    }\n\n    get email() {\n      return this.createForm.get('em.email');\n    }\n\n    get reEmail() {\n      return this.createForm.get('em.reEmail');\n    }\n\n    get isAgree() {\n      return this.createForm.get('isAgree');\n    } // GET TODAY\n\n\n    getToday() {\n      const todayTemp = new Date();\n      const todayDate = todayTemp.getUTCDate();\n      const todayMonth = todayTemp.getUTCMonth() + 1;\n      const todayFullYear = todayTemp.getUTCFullYear();\n      let todayDateString;\n      let todayMonthString;\n\n      if (todayDate < 10) {\n        todayDateString = '0' + todayDate;\n      } else {\n        todayDateString = todayDate;\n      }\n\n      if (todayMonth < 10) {\n        todayMonthString = '0' + todayMonth;\n      } else {\n        todayMonthString = todayMonth;\n      }\n\n      this.today = todayFullYear + '-' + todayMonthString + '-' + todayDateString;\n    }\n\n    create() {\n      if (this.createForm.invalid) {\n        if (this.name.value == '') {\n          this.name.setErrors({\n            name: true,\n            inValidMessage: 'Bạn phải nhập tên.'\n          });\n        }\n\n        if (this.userName.value == '') {\n          this.userName.setErrors({\n            userName: true,\n            inValidMessage: 'Bạn phải nhập tên đăng nhập.'\n          });\n        }\n\n        if (this.password.value == '') {\n          this.password.setErrors({\n            password: true,\n            inValidMessage: 'Bạn phải nhập mật khẩu.'\n          });\n        }\n\n        if (this.rePassword.value == '') {\n          this.pw.setErrors({\n            rePassword: true,\n            inValidMessage: 'Bạn phải xác nhận lại mật khẩu.'\n          });\n        }\n\n        if (this.dateOfBirth.value == '') {\n          this.dateOfBirth.setErrors({\n            dateOfBirth: true,\n            inValidMessage: 'Bạn phải chọn ngày sinh.'\n          });\n        }\n\n        if (this.createDate.value == '') {\n          this.createDate.setErrors({\n            createDate: true,\n            inValidMessage: 'Bạn phải chọn ngày tạo mới.'\n          });\n        }\n\n        if (this.gender.value == '') {\n          this.gender.setErrors({\n            gender: true,\n            inValidMessage: 'Bạn phải chọn giới tính.'\n          });\n        }\n\n        if (this.career.value == '') {\n          this.career.setErrors({\n            career: true,\n            inValidMessage: 'Bạn phải nhập nghề nghiệp.'\n          });\n        }\n\n        if (this.address.value == '') {\n          this.address.setErrors({\n            address: true,\n            inValidMessage: 'Bạn phải nhập địa chỉ.'\n          });\n        }\n\n        if (this.email.value == '') {\n          this.email.setErrors({\n            email: true,\n            inValidMessage: 'Bạn phải nhập email.'\n          });\n        }\n\n        if (this.reEmail.value == '') {\n          this.em.setErrors({\n            reEmail: true,\n            inValidMessage: 'Bạn phải xác nhận lại email.'\n          });\n        }\n\n        if (this.isAgree.value == '') {\n          this.isAgree.setErrors({\n            isAgree: true,\n            inValidMessage: 'Bạn phải đọc và đồng ý theo Điều khoản.'\n          });\n        }\n      } else {\n        this.btnConfirm.nativeElement.click();\n      }\n    }\n\n    mappingFormToObject(form, guestDto) {\n      guestDto.name = form.controls.name.value;\n      guestDto.userName = form.controls.userName.value;\n      guestDto.password = form.get('pw.password').value;\n      guestDto.address = form.controls.address.value;\n      guestDto.career = form.controls.career.value;\n      guestDto.dateOfBirth = form.controls.dateOfBirth.value;\n      guestDto.createDate = form.controls.createDate.value;\n      guestDto.gender = form.controls.gender.value;\n      guestDto.email = form.get('em.email').value;\n    }\n\n    confirmCreate() {\n      this.createFlag = true;\n\n      if (this.createFlag) {\n        this.submitCreate();\n      } else {\n        this.btnCloseConfirm.nativeElement.click();\n      }\n    }\n\n    submitCreate() {\n      let guestDto = {};\n      this.mappingFormToObject(this.createForm, guestDto);\n      this.personService.create(guestDto).subscribe(response => {\n        this.btnCloseConfirm.nativeElement.click();\n        this.btnSuccess.nativeElement.click();\n      }, error => {\n        var _a;\n\n        if (!error.error.status) {\n          this.dict = Object.entries(error.error.errorMap).map(([k, v]) => {\n            return {\n              key: k,\n              value: v\n            };\n          });\n\n          if (this.dict.length > 0) {\n            for (const a of this.dict) {\n              (_a = this.createForm.get(a.key)) === null || _a === void 0 ? void 0 : _a.setErrors({\n                [a.key]: true,\n                inValidMessage: a.value\n              });\n            }\n          }\n        }\n      });\n    }\n\n    confirmSuccess() {\n      this.btnCloseSuccess.nativeElement.click();\n      this.router.navigate(['/guest/survey/', this.userName.value]);\n    }\n\n    changePasswordType() {\n      this.showPassword = !this.showPassword;\n    }\n\n    changeRePasswordType() {\n      this.showRePassword = !this.showRePassword;\n    }\n\n  }\n\n  GuestCreateComponent.ɵfac = function GuestCreateComponent_Factory(t) {\n    return new (t || GuestCreateComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.GuestService));\n  };\n\n  GuestCreateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: GuestCreateComponent,\n    selectors: [[\"app-guest-create\"]],\n    viewQuery: function GuestCreateComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7);\n        i0.ɵɵviewQuery(_c1, 7);\n        i0.ɵɵviewQuery(_c2, 7);\n        i0.ɵɵviewQuery(_c3, 7);\n        i0.ɵɵviewQuery(_c4, 7);\n        i0.ɵɵviewQuery(_c5, 7);\n        i0.ɵɵviewQuery(_c6, 7);\n        i0.ɵɵviewQuery(_c7, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.btnSuccess = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.btnFailed = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.btnCloseSuccess = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.btnSubmit = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.btnClose = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.btnCloseConfirm = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.btnConfirm = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.inputPassword = _t.first);\n      }\n    },\n    decls: 2,\n    vars: 0,\n    template: function GuestCreateComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"guest-create works!\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"\"]\n  });\n  return GuestCreateComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}